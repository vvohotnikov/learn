const Ч всЄ таки можно изменить через obj например
let Ч переменна€
var Ч старый, виден везде и даже до об€влени€
массив - частный тип объекта
все ответы от пользовател€ - строка
continue Ч пропустить шаг
—оздава€ функцию не неадо точку с зап€той,
«акрыва€ что-то - надо

str
slice Ч вхождение (начало, конец)
substring Ч вхождение (начало, конец)
substr (начало, длина)

ƒинамическа€ типизаци€
String() - old
норм - сложение со строкой даЄт строку (5 + '');
Number() - old
норм - унарный плюс (+'5');
parseInt Ч перевод текста в инт
parseFloat Ч перевод в дес€тичную
0, '', null, undefined, NaN Ч false, всЄ остальное true 
!!'что-то' -bool

Object.keys(obj) Ч выводит в массиве все ключи объекта
ƒетруктуризаци€ Ч const { border, bg } = option.colors(они вот тут были);
присваивание объекта к объекту Ч передача по ссылке, а не создание копии
копию можно создать перебором(но глубокие объекты ссылаютс€, если их не обработать) Ч поверхностное копирование
Object.assign(куда, что) Ч вложить. “акже можно создать поверхностную копию, только "куда" = {}.
Object.setPrototypeOf(кому, от кого); Ч наследование
const кому =  Object.create(от кого); наследование


arr
перебор в массиве/строке for (let i of arr) {}; Ч если нужно остановить или пропустить
letngt Ч последний индекс +1 (могут быть пустые €чейки внтури)
forEach(function(item, index, arr){
	функци€;
});
.push Ч добавить
.map модификаци€ 
.сорт работает как сорт —“–ќ , даже дл€ интов
чтобы отсортить инты Ч нужно добавить в метод сорт(тут) Чfunction солбек(a, b) {
return a-b;
}
присвоение Arr = также ссылка
newArr = oldArr.slice(); Ч копи€
... Ч spread (разворот массива на элементы), все элементы массива вносит куда то по отдельности. ј также можно делать поверхностную копию (объектов и массивов).


document.getElemmentBy...('') Ч псевдокласс
document.createElement('')
document.querySelectorAll()псведомассив
document.querySelector('.obg')

defer Ч подгружает скрипт в фоне и ждЄт ƒќћ
async Ч подгружаетс€ и сразу запускаетс€

.classList (дл€ работы с классами объекта)
.add('red','blue')
.remove
.toggle Ч (преключать вкл/выкл)
.contains('red') Ч есть ли класс такой


делегирование
наследование свойств от родител€ к чайлд 

addEventListener('click', (event) => {
if (event.target && event.target.tagName...)
});

target.matches('button.red')

им€ = setTimeout(что, врем€);

clearInterval(им€);